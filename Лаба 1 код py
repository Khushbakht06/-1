#Лабораторная работа №1
#Написать программу, которая читая символы из бесконечной последовательности (эмулируется конечным файлом, читающимся поблочно), распознает, преобразует и выводит на экран лексемы по определенному правилу. Лексемы разделены пробелами. Преобразование делать по возможности через словарь. Для упрощения под выводом числа прописью подразумевается последовательный вывод всех цифр числа. Регулярные выражения использовать нельзя.
#Вариант 10.
#Натуральные числа. Выводит на экран нечетные числа, меняя порядок цифр в них на обратный. Полиндромы (значения не меняется от смены цифр) - выводятся прописью.

def is_palindrome(num_str):
    return num_str == num_str[::-1]

def number_to_words(num_str):
    num_words = {
        '0': 'ноль', '1': 'один', '2': 'два', '3': 'три', '4': 'четыре',
        '5': 'пять', '6': 'шесть', '7': 'семь', '8': 'восемь', '9': 'девять'
    }
    return ' '.join(num_words[digit] for digit in num_str)

def process_number(num_str):
    if is_palindrome(num_str):
        return number_to_words(num_str)
    else:
        return num_str[::-1]

def is_odd(num_str):
    return int(num_str) % 2 != 0

def process_lexeme(lexeme):
    if lexeme.isdigit() and int(lexeme) > 0:  # Natural numbers
        if is_odd(lexeme):
            return process_number(lexeme)
    return lexeme  # Return the original lexeme if it's not a natural number

def read_file_in_blocks(file_path, block_size=1024):
    with open(file_path, 'r', encoding='utf-8') as file:
        while True:
            block = file.read(block_size)
            if not block:
                break
            yield block

def process_file(file_path):
    buffer = ""
    for block in read_file_in_blocks(file_path):
        buffer += block
        while ' ' in buffer:
            space_index = buffer.index(' ')
            lexeme = buffer[:space_index]
            buffer = buffer[space_index + 1:]
            print(process_lexeme(lexeme), end=' ')
    if buffer:  # Process remaining part of the buffer
        print(process_lexeme(buffer), end=' ')

# Example usage::
file_path = 'C:/student/2 сем/1 lab.py/input.txt'
process_file(file_path)

